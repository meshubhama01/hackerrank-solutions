cache = []
result = []
for _ in range(int(input())):
    n, m = map(int, input().split())
    mat = [[1] * (m + 2) for _ in range(n + 2)]
    for i in range(1, n + 1):
        for j, c in zip(range(1, m + 1), input().strip()):
            if c == "M":
                cache.append((i, j))
            elif c == "*":
                finish = (i, j)
                mat[i][j] = 0
            elif c == ".":
                mat[i][j] = 0
    guess = int(input()) + 1
    while cache:
        i, j = cache.pop()
        if (i, j) == finish:
            cache = []
            result.append(mat[i][j] == guess)
        else:
            paths = tuple((x, y) for x, y in ((i, j + 1), (i, j - 1), (i + 1, j), (i - 1, j)) if not mat[x][y])
            depth = mat[i][j] + (len(paths) > 1)
            cache.extend(paths)
            for x, y in paths:
                mat[x][y] = depth
print("\n".join("Impressed" if correct else "Oops!" for correct in result))
