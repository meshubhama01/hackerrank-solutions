# Enter your code here. Read input from STDIN. Print output to STDOUT
def task_sched(tasks):
    ''' Give a list of tasks ''tasks'', produce a schedule along with any overtime.
    Each task in ''tasks'' is a tuple of (tid, di, mi), where tid is the task id, di
    is the deadline, and mi is the minutes it takes to complete it. ''issorted'' tells
    if ''tasks'' are already sorted. '''
    sched = []
    tasks.sort(key=lambda t: t[1])
    #print ">>>", tasks
    maxover = float("-inf")
    starttime = 0
    curtime = 0
    for t in tasks:
        #print ">>> time %d: task %s" % (curtime, t)
        st = curtime
        et = curtime + t[2]
        sched.append((t[0], st, et)) 
        curtime += t[2]
        if et - t[1] > maxover:
            maxover = et - t[1]
            #print ">>> maxover is now %d" % (et - t[1])
    #print ">>>", sched
    return (maxover, sched)

##
# Test
#

if __name__ == "__main__":
    import sys
    # Get number of tasks
    ntasks = int(raw_input())
    #print ">>> %d tasks" % ntasks
    tasks = []
    res = []
    for idx in range(1, ntasks + 1):
        (di, mi) = raw_input().split()
        #print ">>> %s" % ([idx, int(di), int(mi)])
        tasks.append((idx, int(di), int(mi),))
        maxover, sched = task_sched(tasks)
        res.append((maxover, sched,))
    for r in res:
        print r[0]
